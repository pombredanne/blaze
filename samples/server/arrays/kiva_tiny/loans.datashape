type KivaLoan = {
    id: int64;
    name: string;
    description: {
        languages: var, string(2);
        texts: json # map<string(2), string>;
    };
    status: string; # LoanStatusType;
    funded_amount: float64;
    basket_amount: json; # Option(float64);
    paid_amount: json; # Option(float64);
    image: {
        id: int64;
        template_id: int64;
    };
    video: json; # Option({
    #    id: int64;
    #    youtube_id: string;
    #});
    activity: string;
    sector: string;
    use: string;
    # For 'delinquent', saw values \"null\" and \"true\" in brief search, map null -> false on import?
    delinquent: bool;
    location: {
        country_code: string(2);
        country: string;
        town: json; # Option(string);
        geo: {
            level: string; # GeoLevelType
            pairs: string; # latlong
            type: string; # GeoTypeType
        }
    };
    partner_id: int64;
    posted_date: json; # datetime<seconds>;
    planned_expiration_date: json; # Option(datetime<seconds>);
    loan_amount: float64;
    currency_exchange_loss_amount: json; # Option(float64);
    borrowers: var, {
        first_name: string;
        last_name: string;
        gender: string(1); # GenderType
        pictured: bool;
    };
    terms: {
        disbursal_date: json; # datetime<seconds>;
        disbursal_currency: string(3,'A');
        disbursal_amount: float64;
        loan_amount: float64;
        local_payments: var, {
            due_date: json; # datetime<seconds>;
            amount: float64;
        };
        scheduled_payments: var, {
            due_date: json; # datetime<seconds>;
            amount: float64;
        };
        loss_liability: {
            nonpayment: string; # Categorical(string, [\"lender\", \"partner\"]);
            currency_exchange: string;
            currency_exchange_coverage_rate: json; # Option(float64);
        }
    };
    payments: var, {
        amount: float64;
        local_amount: float64;
        processed_date: json; # datetime<seconds>;
        settlement_date: json; # datetime<seconds>;
        rounded_local_amount: float64;
        currency_exchange_loss_amount: float64;
        payment_id: int64;
        comment: json; # Option(string);
    };
    funded_date: json; # datetime<seconds>;
    paid_date: json; # datetime<seconds>;
    journal_totals: {
        entries: int64;
        bulkEntries: int64;
    }
}

type KivaLoansFile = {
    header: {
        total: int64;
        page: int64;
        date: string;
        page_size: int64;
    };
    loans: var, KivaLoan;
}
